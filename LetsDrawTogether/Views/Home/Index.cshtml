@section scripts{
    <script src="~/Scripts/jquery-1.10.2.js"></script>
    <script src="~/Scripts/jquery.signalR-2.0.0.js"></script>
    <script src="~/Scripts/LetsDrawTogether.js"></script>
    @* ReSharper disable once Html.PathError *@
    <script src="~/signalr/hubs"></script>

    <script type="text/javascript">
        if (typeof (localStorage) == 'undefined') {
            alert('Your browser does not support HTML5 localStorage. Try upgrading.');
        } else {
            try {
                localStorage.setItem('DrawGuId', guid()); //saves to the database, “key”, “value”
            } catch (e) {
                alert(e); //data wasn’t successfully saved due to quota exceed so throw an error
            }
        }
        var fromServer = false;

        var canvas, ctx, flag = false,
            prevX = 0,
            currX = 0,
            prevY = 0,
            currY = 0,
            dot_flag = false;

        var x = "black",
            y = 2;

        canvas = document.getElementById('can');
        ctx = canvas.getContext("2d");
        w = canvas.width;
        h = canvas.height;

        $(function () {
            //SignalR
            var hub = $.connection.hubController;

            // Create a function that the hub can call to broadcast messages.
            hub.client.drawTogether = function (res, clientX, clientY) {
                findxy(res, clientX, clientY);
            };
            hub.client.changeColor = function (color) {
                x = color;
                if (x == "white") y = 14;
                else y = 2;
            };
            hub.client.clearOrSave = function (btnId) {
                fromServer = true;
                $("#" + btnId).trigger("click");
            };
            hub.client.newGroup = function (groupId) {
                $("#groupId").html("Draw Id number: " + groupId);
                $("#drawIdToSend").val("");
            };

            // Start the connection.
            $.connection.hub.start().done(function () {
                hub.server.joinGroup(localStorage["DrawGuId"]);
                $("#groupId").html("Draw Id number: " + localStorage["DrawGuId"]);

                $("#sendDrawId").click(function() {
                    hub.server.joinToSpecificGroup($("#drawIdToSend").val(), localStorage["DrawGuId"]);
                    localStorage.setItem('DrawGuId', $("#drawIdToSend").val());
                });

                canvas.addEventListener("mousemove", function (e) {
                    var res = 'move';
                    hub.server.drawTogether(res, e.clientX, e.clientY, localStorage["DrawGuId"]);
                    findxy(res, e.clientX, e.clientY);
                }, false);
                canvas.addEventListener("mousedown", function (e) {
                    var res = 'down';
                    hub.server.drawTogether(res, e.clientX, e.clientY, localStorage["DrawGuId"]);
                    findxy(res, e.clientX, e.clientY);
                }, false);
                canvas.addEventListener("mouseup", function (e) {
                    var res = 'up';
                    hub.server.drawTogether(res, e.clientX, e.clientY, localStorage["DrawGuId"]);
                    findxy(res, e.clientX, e.clientY);
                }, false);
                canvas.addEventListener("mouseout", function (e) {
                    var res = 'out';
                    hub.server.drawTogether(res, e.clientX, e.clientY, localStorage["DrawGuId"]);
                    findxy(res, e.clientX, e.clientY);
                }, false);

                $(".colors").click(function color() {
                    var obj = $(this);
                    hub.server.changeColor(obj.attr("id"), localStorage["DrawGuId"]);
                    switch (obj.attr("id")) {
                        case "green":
                            x = "green";
                            break;
                        case "blue":
                            x = "blue";
                            break;
                        case "red":
                            x = "red";
                            break;
                        case "yellow":
                            x = "yellow";
                            break;
                        case "orange":
                            x = "orange";
                            break;
                        case "black":
                            x = "black";
                            break;
                        case "white":
                            x = "white";
                            break;
                    }
                    if (x == "white") y = 14;
                    else y = 2;
                });

                $("#clr").click(function erase() {
                    if (confirm("Want to clear")) {
                        if (!fromServer) {
                            hub.server.clearOrSave($(this).attr("id"), localStorage["DrawGuId"]);
                        } else {
                            fromServer = false;
                        }

                        ctx.clearRect(0, 0, w, h);
                        document.getElementById("canvasimg").style.display = "none";
                    }
                });

                $("#btn").click(function save() {
                    if (!fromServer) {
                        hub.server.clearOrSave($(this).attr("id"), localStorage["DrawGuId"]);
                    } else {
                        fromServer = false;
                    }

                    document.getElementById("canvasimg").style.border = "2px solid";
                    var dataUrl = canvas.toDataURL();
                    document.getElementById("canvasimg").src = dataUrl;
                    document.getElementById("canvasimg").style.display = "inline";
                });
            });

            function draw() {
                ctx.beginPath();
                ctx.moveTo(prevX, prevY);
                ctx.lineTo(currX, currY);
                ctx.strokeStyle = x;
                ctx.lineWidth = y;
                ctx.stroke();
                ctx.closePath();
            }

            function findxy(res, clientX, clientY) {
                if (res == 'down') {
                    prevX = currX;
                    prevY = currY;
                    currX = clientX - canvas.offsetLeft;
                    currY = clientY - canvas.offsetTop;

                    flag = true;
                    dot_flag = true;
                    if (dot_flag) {
                        ctx.beginPath();
                        ctx.fillStyle = x;
                        ctx.fillRect(currX, currY, 2, 2);
                        ctx.closePath();
                        dot_flag = false;
                    }
                }
                if (res == 'up' || res == "out") {
                    flag = false;
                }
                if (res == 'move') {
                    if (flag) {
                        prevX = currX;
                        prevY = currY;
                        currX = clientX - canvas.offsetLeft;
                        currY = clientY - canvas.offsetTop;
                        draw();
                    }
                }
            }
        });
    </script>
}

<canvas id="can" width="400" height="400" style="position:absolute;top:10%;left:10%;border:2px solid;"></canvas>
<div style="padding-top: 500px;">
    <div style="position:absolute;top:12%;left:43%;">Choose Color</div>
    <div style="position:absolute;top:15%;left:45%;width:10px;height:10px;background:green;" id="green" class="colors"></div>
    <div style="position:absolute;top:15%;left:46%;width:10px;height:10px;background:blue;" id="blue" class="colors"></div>
    <div style="position:absolute;top:15%;left:47%;width:10px;height:10px;background:red;" id="red" class="colors"></div>
    <div style="position:absolute;top:17%;left:45%;width:10px;height:10px;background:yellow;" id="yellow" class="colors"></div>
    <div style="position:absolute;top:17%;left:46%;width:10px;height:10px;background:orange;" id="orange" class="colors"></div>
    <div style="position:absolute;top:17%;left:47%;width:10px;height:10px;background:black;" id="black" class="colors"></div>
    <div style="position:absolute;top:20%;left:43%;">Eraser</div>
    <div style="position:absolute;top:23%;left:45%;width:15px;height:15px;background:white;border:2px solid;" id="white" class="colors"></div>
    <img id="canvasimg" style="position:absolute;top:10%;left:52%;" style="display:none;">
    <input type="button" value="save" id="btn" size="30" style="position:absolute;top:26%;left:43%;">
    <input type="button" value="clear" id="clr" size="23" style="position:absolute;top:26%;left:48%;">
</div>

<h5 id="groupId"></h5>
<input type="text" id="drawIdToSend" placeholder="Enter a draw Id"/>
<button id="sendDrawId">Join to Draw group</button>

<!--Let's draw together-->